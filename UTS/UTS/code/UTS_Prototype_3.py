# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UTS_2.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage
from PyQt5.QtWidgets import QFileDialog

import cv2 as cv

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(516, 511)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.BlurSlider = QtWidgets.QSlider(self.centralwidget)
        self.BlurSlider.setGeometry(QtCore.QRect(10, 450, 121, 31))
        self.BlurSlider.setMinimum(0)
        self.BlurSlider.setMaximum(255)
        self.BlurSlider.setOrientation(QtCore.Qt.Horizontal)
        self.BlurSlider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.BlurSlider.setObjectName("BlurSlider")
        self.SaveButton = QtWidgets.QPushButton(self.centralwidget)
        self.SaveButton.setGeometry(QtCore.QRect(430, 450, 75, 31))
        self.SaveButton.setObjectName("SaveButton")
        self.OpenButton = QtWidgets.QPushButton(self.centralwidget)
        self.OpenButton.setGeometry(QtCore.QRect(430, 400, 75, 31))
        self.OpenButton.setObjectName("OpenButton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 491, 371))
        self.label.setAutoFillBackground(False)
        self.label.setFrameShape(QtWidgets.QFrame.Box)
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("lena.jpg"))
        self.label.setScaledContents(True)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setWordWrap(False)
        self.label.setObjectName("label")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(140, 450, 21, 31))
        self.label_6.setObjectName("label_6")
        self.ResetButton = QtWidgets.QPushButton(self.centralwidget)
        self.ResetButton.setGeometry(QtCore.QRect(170, 450, 81, 31))
        self.ResetButton.setObjectName("ResetButton")
        self.NegativeButton = QtWidgets.QPushButton(self.centralwidget)
        self.NegativeButton.setGeometry(QtCore.QRect(130, 400, 121, 31))
        self.NegativeButton.setObjectName("NegativeButton")
        self.GreyScaleButton = QtWidgets.QPushButton(self.centralwidget)
        self.GreyScaleButton.setGeometry(QtCore.QRect(10, 400, 111, 31))
        self.GreyScaleButton.setObjectName("GreyScaleButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.BlurSlider.valueChanged['int'].connect(self.blurValue)
        self.OpenButton.clicked.connect(self.loadImage)
        self.SaveButton.clicked.connect(self.saveImage)
        self.GreyScaleButton.clicked.connect(self.greyScaleChange)
        self.NegativeButton.clicked.connect(self.negativeChange)
        self.ResetButton.clicked.connect(self.resetImage)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    #---------------------------------------------------- deklarasi variabel
        self.filename = None
        self.imageTemp = None

        self.currentBlurValue = 0
    
    #---------------------------------------------------- load, save , and set image function
    def loadImage(self) :
        self.filename = QFileDialog.getOpenFileName(filter="JPG(*.jpg);;PNG(*.png)")[0]
        self.image = cv.imread(self.filename)
        self.setImage(self.image)
    
    def setImage(self,image) :
        self.imageTemp = image
        image = cv.resize(image,(491,371))
        image = image.astype('uint8')
        image = cv.cvtColor(image,cv.COLOR_BGR2RGB)
        # image = image[:,:,[2,1,0]]
        image = QImage(image, image.shape[1], image.shape[0], image.strides[0], QImage.Format_RGB888)
        self.label.setPixmap(QtGui.QPixmap.fromImage(image))
    
    def saveImage(self) :
        self.filename = QFileDialog.getSaveFileName(filter="JPG(*.jpg);;PNG(*.png)")[0]
        cv.imwrite(self.filename,self.imageTemp)
    
    def resetImage(self) :
        self.image = cv.imread(self.filename)
        self.setImage(self.image)
        self.BlurSlider.setValue(0)

    #------------------------------------ blur function
    def blurValue(self,value) :
        self.currentBlurValue = value + 1
        self.blurChange()
    
    def adjustBlur(self,image) :
        kernelSize = (self.currentBlurValue, self.currentBlurValue)
        image = cv.blur(image,kernelSize)
        return image
    
    def blurChange(self) :
        image = self.adjustBlur(self.image)
        self.setImage(image)
    
    #------------------------------------ greyscale function
    def convertToGreyScale(self,image) :
        Blue  = (image[:,:,0])
        Green = (image[:,:,1])
        Red   = (image[:,:,2])

        greyImage   = 0.2989 * Red + 0.5870 * Green + 0.1140 *Blue

        return greyImage
    
    def greyScaleChange(self) :
        image = self.convertToGreyScale(self.image)
        self.setImage(image)
    
    #------------------------------------ HSV function
    def convertToHSV(self,image) :
        imageHSV = cv.cvtColor(image, cv.COLOR_BGR2HSV_FULL)
        return imageHSV
    
    def HSVChange(self) :
        image = self.convertToHSV(self.image)
        self.setImage(image)
    
    #------------------------------------ Negative image
    def convertToNegative(self, image) :
        greyImage = self.convertToGreyScale(image)
        negativeImage = 255 - greyImage
        return negativeImage
    
    def negativeChange(self) :
        image = self.convertToNegative(self.image)
        self.setImage(image)



    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Program Manipulasi Citra Digital"))
        self.SaveButton.setText(_translate("MainWindow", "Save"))
        self.OpenButton.setText(_translate("MainWindow", "Open"))
        self.label_6.setText(_translate("MainWindow", "Blur"))
        self.ResetButton.setText(_translate("MainWindow", "Reset"))
        self.NegativeButton.setText(_translate("MainWindow", "Negative"))
        self.GreyScaleButton.setText(_translate("MainWindow", "GreyScale"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
